{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This Script is to setup  AWS account password policy. We are executing some lambda function to change the password policy of AWS account. After executing this script every newly created user must follow this password policy.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Password Policy Parameters"
          },
          "Parameters": [
            "RequireUppercaseCharacters",
            "RequireLowercaseCharacters",
            "RequireSymbols",
            "RequireNumbers",
            "MinimumPasswordLength",
            "PasswordReusePrevention",
            "MaxPasswordAge"
          ]
        }
      ]
    }
  },
  "Parameters": {
    "RequireUppercaseCharacters": {
      "Description": "You can require that IAM user passwords contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).",
      "Type": "String",
      "Default": "True",
      "AllowedValues": [
        "True",
        "False"
      ]
    },
    "RequireLowercaseCharacters": {
      "Description": "You can require that IAM user passwords contain at least one lowercase character from the ISO basic Latin alphabet (a to z).",
      "Type": "String",
      "Default": "True",
      "AllowedValues": [
        "True",
        "False"
      ]
    },
    "RequireSymbols": {
      "Description": "You can require that IAM user passwords contain at least one of the following nonalphanumeric characters: ! @ # $ % ^ & * ( ) _ + - = [ ] {} | '",
      "Type": "String",
      "Default": "True",
      "AllowedValues": [
        "True",
        "False"
      ]
    },
    "RequireNumbers": {
      "Description": "You can require that IAM user passwords contain at least one numeric character (0 to 9).",
      "Type": "String",
      "Default": "True",
      "AllowedValues": [
        "True",
        "False"
      ]
    },
    "MinimumPasswordLength": {
      "Description": "You can specify the minimum number of characters allowed in an IAM user password.",
      "Type": "Number",
      "Default": 14,
      "ConstraintDescription": "Must be in the range [6-128]",
      "MinValue": 6,
      "MaxValue": 128
    },
    "PasswordReusePrevention": {
      "Description": "You can prevent IAM users from reusing a specified number of previous passwords.",
      "Type": "Number",
      "Default": 3,
      "ConstraintDescription": "Must be in the range [0-24]",
      "MinValue": 1,
      "MaxValue": 24
    },
    "MaxPasswordAge": {
      "Description": "You can set IAM user passwords to be valid for only the specified number of days.",
      "Type": "Number",
      "Default": 90,
      "ConstraintDescription": "Must be in the range [0-1095]",
      "MinValue": 0,
      "MaxValue": 1095
    }
  },
  "Resources": {
      "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
	    "RoleName": { "Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "LambdaRole" ] ] },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "logs",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          },
          {
            "PolicyName": "iam",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:UpdateAccountPasswordPolicy",
                    "iam:DeleteAccountPasswordPolicy"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Sub": "import boto3\nimport cfnresponse\nimport logging as log\nimport json\ndef handler(event, context):\n    \n    iam = boto3.resource('iam')\n    account_password_policy = iam.AccountPasswordPolicy()\n\n    try:\n\n        response = account_password_policy.update(\n            MinimumPasswordLength=${MinimumPasswordLength},\n            RequireSymbols=${RequireSymbols},\n            RequireNumbers=${RequireNumbers},\n            RequireUppercaseCharacters=${RequireUppercaseCharacters},\n            RequireLowercaseCharacters=${RequireLowercaseCharacters},\n            MaxPasswordAge=${MaxPasswordAge},\n            PasswordReusePrevention=${PasswordReusePrevention}\n        )\n    except Exception as e:\n        log.error(e.message)\n    finally:\n        pass\n\n    cfnresponse.send(event, context, cfnresponse.SUCCESS, response, None)\n"
          }
        },
        "Handler": "index.handler",
		"FunctionName":{ "Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "account-password-policy" ] ] },
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": 30
      }
    },
    "PasswordPolicy": {
      "DependsOn": "LambdaFunction",
      "Type": "Custom::PasswordPolicy",
      "Version": "1.0",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {
    "TemplateID": {
      "Description": "90DaysPassword-policy",
      "Value": "security/account-password-policy"
    },
    "StackName": {
      "Description": "IAM Account Password Policy",
      "Value": {
        "Fn::Sub": "${AWS::StackName}"
      }
    }
  }
}